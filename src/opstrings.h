/*
 * spvm
 * @author 	: keith@robot9.me
 *
 */

#pragma once

#include "spirv.h"

namespace SPVM {

static const char *spvmOpString(SpvOp op) {
#define SPVM_OP_STR(op) case op: return #op
  switch (op) {
    SPVM_OP_STR(SpvOpNop);
    SPVM_OP_STR(SpvOpUndef);
    SPVM_OP_STR(SpvOpSourceContinued);
    SPVM_OP_STR(SpvOpSource);
    SPVM_OP_STR(SpvOpSourceExtension);
    SPVM_OP_STR(SpvOpName);
    SPVM_OP_STR(SpvOpMemberName);
    SPVM_OP_STR(SpvOpString);
    SPVM_OP_STR(SpvOpLine);
    SPVM_OP_STR(SpvOpExtension);
    SPVM_OP_STR(SpvOpExtInstImport);
    SPVM_OP_STR(SpvOpExtInst);
    SPVM_OP_STR(SpvOpMemoryModel);
    SPVM_OP_STR(SpvOpEntryPoint);
    SPVM_OP_STR(SpvOpExecutionMode);
    SPVM_OP_STR(SpvOpCapability);
    SPVM_OP_STR(SpvOpTypeVoid);
    SPVM_OP_STR(SpvOpTypeBool);
    SPVM_OP_STR(SpvOpTypeInt);
    SPVM_OP_STR(SpvOpTypeFloat);
    SPVM_OP_STR(SpvOpTypeVector);
    SPVM_OP_STR(SpvOpTypeMatrix);
    SPVM_OP_STR(SpvOpTypeImage);
    SPVM_OP_STR(SpvOpTypeSampler);
    SPVM_OP_STR(SpvOpTypeSampledImage);
    SPVM_OP_STR(SpvOpTypeArray);
    SPVM_OP_STR(SpvOpTypeRuntimeArray);
    SPVM_OP_STR(SpvOpTypeStruct);
    SPVM_OP_STR(SpvOpTypeOpaque);
    SPVM_OP_STR(SpvOpTypePointer);
    SPVM_OP_STR(SpvOpTypeFunction);
    SPVM_OP_STR(SpvOpTypeEvent);
    SPVM_OP_STR(SpvOpTypeDeviceEvent);
    SPVM_OP_STR(SpvOpTypeReserveId);
    SPVM_OP_STR(SpvOpTypeQueue);
    SPVM_OP_STR(SpvOpTypePipe);
    SPVM_OP_STR(SpvOpTypeForwardPointer);
    SPVM_OP_STR(SpvOpConstantTrue);
    SPVM_OP_STR(SpvOpConstantFalse);
    SPVM_OP_STR(SpvOpConstant);
    SPVM_OP_STR(SpvOpConstantComposite);
    SPVM_OP_STR(SpvOpConstantSampler);
    SPVM_OP_STR(SpvOpConstantNull);
    SPVM_OP_STR(SpvOpSpecConstantTrue);
    SPVM_OP_STR(SpvOpSpecConstantFalse);
    SPVM_OP_STR(SpvOpSpecConstant);
    SPVM_OP_STR(SpvOpSpecConstantComposite);
    SPVM_OP_STR(SpvOpSpecConstantOp);
    SPVM_OP_STR(SpvOpFunction);
    SPVM_OP_STR(SpvOpFunctionParameter);
    SPVM_OP_STR(SpvOpFunctionEnd);
    SPVM_OP_STR(SpvOpFunctionCall);
    SPVM_OP_STR(SpvOpVariable);
    SPVM_OP_STR(SpvOpImageTexelPointer);
    SPVM_OP_STR(SpvOpLoad);
    SPVM_OP_STR(SpvOpStore);
    SPVM_OP_STR(SpvOpCopyMemory);
    SPVM_OP_STR(SpvOpCopyMemorySized);
    SPVM_OP_STR(SpvOpAccessChain);
    SPVM_OP_STR(SpvOpInBoundsAccessChain);
    SPVM_OP_STR(SpvOpPtrAccessChain);
    SPVM_OP_STR(SpvOpArrayLength);
    SPVM_OP_STR(SpvOpGenericPtrMemSemantics);
    SPVM_OP_STR(SpvOpInBoundsPtrAccessChain);
    SPVM_OP_STR(SpvOpDecorate);
    SPVM_OP_STR(SpvOpMemberDecorate);
    SPVM_OP_STR(SpvOpDecorationGroup);
    SPVM_OP_STR(SpvOpGroupDecorate);
    SPVM_OP_STR(SpvOpGroupMemberDecorate);
    SPVM_OP_STR(SpvOpVectorExtractDynamic);
    SPVM_OP_STR(SpvOpVectorInsertDynamic);
    SPVM_OP_STR(SpvOpVectorShuffle);
    SPVM_OP_STR(SpvOpCompositeConstruct);
    SPVM_OP_STR(SpvOpCompositeExtract);
    SPVM_OP_STR(SpvOpCompositeInsert);
    SPVM_OP_STR(SpvOpCopyObject);
    SPVM_OP_STR(SpvOpTranspose);
    SPVM_OP_STR(SpvOpSampledImage);
    SPVM_OP_STR(SpvOpImageSampleImplicitLod);
    SPVM_OP_STR(SpvOpImageSampleExplicitLod);
    SPVM_OP_STR(SpvOpImageSampleDrefImplicitLod);
    SPVM_OP_STR(SpvOpImageSampleDrefExplicitLod);
    SPVM_OP_STR(SpvOpImageSampleProjImplicitLod);
    SPVM_OP_STR(SpvOpImageSampleProjExplicitLod);
    SPVM_OP_STR(SpvOpImageSampleProjDrefImplicitLod);
    SPVM_OP_STR(SpvOpImageSampleProjDrefExplicitLod);
    SPVM_OP_STR(SpvOpImageFetch);
    SPVM_OP_STR(SpvOpImageGather);
    SPVM_OP_STR(SpvOpImageDrefGather);
    SPVM_OP_STR(SpvOpImageRead);
    SPVM_OP_STR(SpvOpImageWrite);
    SPVM_OP_STR(SpvOpImage);
    SPVM_OP_STR(SpvOpImageQueryFormat);
    SPVM_OP_STR(SpvOpImageQueryOrder);
    SPVM_OP_STR(SpvOpImageQuerySizeLod);
    SPVM_OP_STR(SpvOpImageQuerySize);
    SPVM_OP_STR(SpvOpImageQueryLod);
    SPVM_OP_STR(SpvOpImageQueryLevels);
    SPVM_OP_STR(SpvOpImageQuerySamples);
    SPVM_OP_STR(SpvOpConvertFToU);
    SPVM_OP_STR(SpvOpConvertFToS);
    SPVM_OP_STR(SpvOpConvertSToF);
    SPVM_OP_STR(SpvOpConvertUToF);
    SPVM_OP_STR(SpvOpUConvert);
    SPVM_OP_STR(SpvOpSConvert);
    SPVM_OP_STR(SpvOpFConvert);
    SPVM_OP_STR(SpvOpQuantizeToF16);
    SPVM_OP_STR(SpvOpConvertPtrToU);
    SPVM_OP_STR(SpvOpSatConvertSToU);
    SPVM_OP_STR(SpvOpSatConvertUToS);
    SPVM_OP_STR(SpvOpConvertUToPtr);
    SPVM_OP_STR(SpvOpPtrCastToGeneric);
    SPVM_OP_STR(SpvOpGenericCastToPtr);
    SPVM_OP_STR(SpvOpGenericCastToPtrExplicit);
    SPVM_OP_STR(SpvOpBitcast);
    SPVM_OP_STR(SpvOpSNegate);
    SPVM_OP_STR(SpvOpFNegate);
    SPVM_OP_STR(SpvOpIAdd);
    SPVM_OP_STR(SpvOpFAdd);
    SPVM_OP_STR(SpvOpISub);
    SPVM_OP_STR(SpvOpFSub);
    SPVM_OP_STR(SpvOpIMul);
    SPVM_OP_STR(SpvOpFMul);
    SPVM_OP_STR(SpvOpUDiv);
    SPVM_OP_STR(SpvOpSDiv);
    SPVM_OP_STR(SpvOpFDiv);
    SPVM_OP_STR(SpvOpUMod);
    SPVM_OP_STR(SpvOpSRem);
    SPVM_OP_STR(SpvOpSMod);
    SPVM_OP_STR(SpvOpFRem);
    SPVM_OP_STR(SpvOpFMod);
    SPVM_OP_STR(SpvOpVectorTimesScalar);
    SPVM_OP_STR(SpvOpMatrixTimesScalar);
    SPVM_OP_STR(SpvOpVectorTimesMatrix);
    SPVM_OP_STR(SpvOpMatrixTimesVector);
    SPVM_OP_STR(SpvOpMatrixTimesMatrix);
    SPVM_OP_STR(SpvOpOuterProduct);
    SPVM_OP_STR(SpvOpDot);
    SPVM_OP_STR(SpvOpIAddCarry);
    SPVM_OP_STR(SpvOpISubBorrow);
    SPVM_OP_STR(SpvOpUMulExtended);
    SPVM_OP_STR(SpvOpSMulExtended);
    SPVM_OP_STR(SpvOpAny);
    SPVM_OP_STR(SpvOpAll);
    SPVM_OP_STR(SpvOpIsNan);
    SPVM_OP_STR(SpvOpIsInf);
    SPVM_OP_STR(SpvOpIsFinite);
    SPVM_OP_STR(SpvOpIsNormal);
    SPVM_OP_STR(SpvOpSignBitSet);
    SPVM_OP_STR(SpvOpLessOrGreater);
    SPVM_OP_STR(SpvOpOrdered);
    SPVM_OP_STR(SpvOpUnordered);
    SPVM_OP_STR(SpvOpLogicalEqual);
    SPVM_OP_STR(SpvOpLogicalNotEqual);
    SPVM_OP_STR(SpvOpLogicalOr);
    SPVM_OP_STR(SpvOpLogicalAnd);
    SPVM_OP_STR(SpvOpLogicalNot);
    SPVM_OP_STR(SpvOpSelect);
    SPVM_OP_STR(SpvOpIEqual);
    SPVM_OP_STR(SpvOpINotEqual);
    SPVM_OP_STR(SpvOpUGreaterThan);
    SPVM_OP_STR(SpvOpSGreaterThan);
    SPVM_OP_STR(SpvOpUGreaterThanEqual);
    SPVM_OP_STR(SpvOpSGreaterThanEqual);
    SPVM_OP_STR(SpvOpULessThan);
    SPVM_OP_STR(SpvOpSLessThan);
    SPVM_OP_STR(SpvOpULessThanEqual);
    SPVM_OP_STR(SpvOpSLessThanEqual);
    SPVM_OP_STR(SpvOpFOrdEqual);
    SPVM_OP_STR(SpvOpFUnordEqual);
    SPVM_OP_STR(SpvOpFOrdNotEqual);
    SPVM_OP_STR(SpvOpFUnordNotEqual);
    SPVM_OP_STR(SpvOpFOrdLessThan);
    SPVM_OP_STR(SpvOpFUnordLessThan);
    SPVM_OP_STR(SpvOpFOrdGreaterThan);
    SPVM_OP_STR(SpvOpFUnordGreaterThan);
    SPVM_OP_STR(SpvOpFOrdLessThanEqual);
    SPVM_OP_STR(SpvOpFUnordLessThanEqual);
    SPVM_OP_STR(SpvOpFOrdGreaterThanEqual);
    SPVM_OP_STR(SpvOpFUnordGreaterThanEqual);
    SPVM_OP_STR(SpvOpShiftRightLogical);
    SPVM_OP_STR(SpvOpShiftRightArithmetic);
    SPVM_OP_STR(SpvOpShiftLeftLogical);
    SPVM_OP_STR(SpvOpBitwiseOr);
    SPVM_OP_STR(SpvOpBitwiseXor);
    SPVM_OP_STR(SpvOpBitwiseAnd);
    SPVM_OP_STR(SpvOpNot);
    SPVM_OP_STR(SpvOpBitFieldInsert);
    SPVM_OP_STR(SpvOpBitFieldSExtract);
    SPVM_OP_STR(SpvOpBitFieldUExtract);
    SPVM_OP_STR(SpvOpBitReverse);
    SPVM_OP_STR(SpvOpBitCount);
    SPVM_OP_STR(SpvOpDPdx);
    SPVM_OP_STR(SpvOpDPdy);
    SPVM_OP_STR(SpvOpFwidth);
    SPVM_OP_STR(SpvOpDPdxFine);
    SPVM_OP_STR(SpvOpDPdyFine);
    SPVM_OP_STR(SpvOpFwidthFine);
    SPVM_OP_STR(SpvOpDPdxCoarse);
    SPVM_OP_STR(SpvOpDPdyCoarse);
    SPVM_OP_STR(SpvOpFwidthCoarse);
    SPVM_OP_STR(SpvOpEmitVertex);
    SPVM_OP_STR(SpvOpEndPrimitive);
    SPVM_OP_STR(SpvOpEmitStreamVertex);
    SPVM_OP_STR(SpvOpEndStreamPrimitive);
    SPVM_OP_STR(SpvOpControlBarrier);
    SPVM_OP_STR(SpvOpMemoryBarrier);
    SPVM_OP_STR(SpvOpAtomicLoad);
    SPVM_OP_STR(SpvOpAtomicStore);
    SPVM_OP_STR(SpvOpAtomicExchange);
    SPVM_OP_STR(SpvOpAtomicCompareExchange);
    SPVM_OP_STR(SpvOpAtomicCompareExchangeWeak);
    SPVM_OP_STR(SpvOpAtomicIIncrement);
    SPVM_OP_STR(SpvOpAtomicIDecrement);
    SPVM_OP_STR(SpvOpAtomicIAdd);
    SPVM_OP_STR(SpvOpAtomicISub);
    SPVM_OP_STR(SpvOpAtomicSMin);
    SPVM_OP_STR(SpvOpAtomicUMin);
    SPVM_OP_STR(SpvOpAtomicSMax);
    SPVM_OP_STR(SpvOpAtomicUMax);
    SPVM_OP_STR(SpvOpAtomicAnd);
    SPVM_OP_STR(SpvOpAtomicOr);
    SPVM_OP_STR(SpvOpAtomicXor);
    SPVM_OP_STR(SpvOpPhi);
    SPVM_OP_STR(SpvOpLoopMerge);
    SPVM_OP_STR(SpvOpSelectionMerge);
    SPVM_OP_STR(SpvOpLabel);
    SPVM_OP_STR(SpvOpBranch);
    SPVM_OP_STR(SpvOpBranchConditional);
    SPVM_OP_STR(SpvOpSwitch);
    SPVM_OP_STR(SpvOpKill);
    SPVM_OP_STR(SpvOpReturn);
    SPVM_OP_STR(SpvOpReturnValue);
    SPVM_OP_STR(SpvOpUnreachable);
    SPVM_OP_STR(SpvOpLifetimeStart);
    SPVM_OP_STR(SpvOpLifetimeStop);
    SPVM_OP_STR(SpvOpGroupAsyncCopy);
    SPVM_OP_STR(SpvOpGroupWaitEvents);
    SPVM_OP_STR(SpvOpGroupAll);
    SPVM_OP_STR(SpvOpGroupAny);
    SPVM_OP_STR(SpvOpGroupBroadcast);
    SPVM_OP_STR(SpvOpGroupIAdd);
    SPVM_OP_STR(SpvOpGroupFAdd);
    SPVM_OP_STR(SpvOpGroupFMin);
    SPVM_OP_STR(SpvOpGroupUMin);
    SPVM_OP_STR(SpvOpGroupSMin);
    SPVM_OP_STR(SpvOpGroupFMax);
    SPVM_OP_STR(SpvOpGroupUMax);
    SPVM_OP_STR(SpvOpGroupSMax);
    SPVM_OP_STR(SpvOpReadPipe);
    SPVM_OP_STR(SpvOpWritePipe);
    SPVM_OP_STR(SpvOpReservedReadPipe);
    SPVM_OP_STR(SpvOpReservedWritePipe);
    SPVM_OP_STR(SpvOpReserveReadPipePackets);
    SPVM_OP_STR(SpvOpReserveWritePipePackets);
    SPVM_OP_STR(SpvOpCommitReadPipe);
    SPVM_OP_STR(SpvOpCommitWritePipe);
    SPVM_OP_STR(SpvOpIsValidReserveId);
    SPVM_OP_STR(SpvOpGetNumPipePackets);
    SPVM_OP_STR(SpvOpGetMaxPipePackets);
    SPVM_OP_STR(SpvOpGroupReserveReadPipePackets);
    SPVM_OP_STR(SpvOpGroupReserveWritePipePackets);
    SPVM_OP_STR(SpvOpGroupCommitReadPipe);
    SPVM_OP_STR(SpvOpGroupCommitWritePipe);
    SPVM_OP_STR(SpvOpEnqueueMarker);
    SPVM_OP_STR(SpvOpEnqueueKernel);
    SPVM_OP_STR(SpvOpGetKernelNDrangeSubGroupCount);
    SPVM_OP_STR(SpvOpGetKernelNDrangeMaxSubGroupSize);
    SPVM_OP_STR(SpvOpGetKernelWorkGroupSize);
    SPVM_OP_STR(SpvOpGetKernelPreferredWorkGroupSizeMultiple);
    SPVM_OP_STR(SpvOpRetainEvent);
    SPVM_OP_STR(SpvOpReleaseEvent);
    SPVM_OP_STR(SpvOpCreateUserEvent);
    SPVM_OP_STR(SpvOpIsValidEvent);
    SPVM_OP_STR(SpvOpSetUserEventStatus);
    SPVM_OP_STR(SpvOpCaptureEventProfilingInfo);
    SPVM_OP_STR(SpvOpGetDefaultQueue);
    SPVM_OP_STR(SpvOpBuildNDRange);
    SPVM_OP_STR(SpvOpImageSparseSampleImplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleExplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleDrefImplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleDrefExplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleProjImplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleProjExplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleProjDrefImplicitLod);
    SPVM_OP_STR(SpvOpImageSparseSampleProjDrefExplicitLod);
    SPVM_OP_STR(SpvOpImageSparseFetch);
    SPVM_OP_STR(SpvOpImageSparseGather);
    SPVM_OP_STR(SpvOpImageSparseDrefGather);
    SPVM_OP_STR(SpvOpImageSparseTexelsResident);
    SPVM_OP_STR(SpvOpNoLine);
    SPVM_OP_STR(SpvOpAtomicFlagTestAndSet);
    SPVM_OP_STR(SpvOpAtomicFlagClear);
    SPVM_OP_STR(SpvOpImageSparseRead);
    SPVM_OP_STR(SpvOpDecorateId);
    default:
      break;
  }
  return "unknown";
}

}