.\relational_logical.frag
// Module Version 10000
// Generated by (magic number): 8000a
// Id's are bound by 322

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 4  "main" 302
                              ExecutionMode 4 OriginUpperLeft
                              Source GLSL 450
                              SourceExtension  "GL_GOOGLE_cpp_style_line_directive"
                              SourceExtension  "GL_GOOGLE_include_directive"
                              Name 4  "main"
                              Name 8  "assertIdx"
                              Name 13  "a"
                              Name 17  "b"
                              Name 19  "c"
                              Name 21  "d"
                              Name 27  "asserts"
                              Name 65  "fNan"
                              Name 68  "fInf"
                              Name 72  "vf"
                              Name 122  "b1"
                              Name 123  "b2"
                              Name 173  "i1"
                              Name 175  "i2"
                              Name 178  "u1"
                              Name 180  "u2"
                              Name 255  "f1"
                              Name 256  "f2"
                              Name 302  "outAssert"
                              Name 303  "i"
                              Decorate 302(outAssert) Location 0
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeInt 32 1
               7:             TypePointer Function 6(int)
               9:      6(int) Constant 0
              10:             TypeBool
              11:             TypeVector 10(bool) 2
              12:             TypePointer Function 11(bvec2)
              14:    10(bool) ConstantTrue
              15:    10(bool) ConstantFalse
              16:   11(bvec2) ConstantComposite 14 15
              18:   11(bvec2) ConstantComposite 15 15
              20:   11(bvec2) ConstantComposite 14 14
              22:   11(bvec2) ConstantComposite 15 14
              23:             TypeInt 32 0
              24:     23(int) Constant 64
              25:             TypeArray 10(bool) 24
              26:             TypePointer Function 25
              31:             TypePointer Function 10(bool)
              34:      6(int) Constant 1
              63:             TypeFloat 32
              64:             TypePointer Function 63(float)
              66:      6(int) Constant 2146959360
              69:   63(float) Constant 2139095040
              70:             TypeVector 63(float) 3
              71:             TypePointer Function 70(fvec3)
              73:   63(float) Constant 1065353216
              85:             TypeVector 10(bool) 3
              87:   85(bvec3) ConstantComposite 15 14 15
             102:   85(bvec3) ConstantComposite 15 15 14
             159:   63(float) Constant 1036831949
             160:   63(float) Constant 1045220557
             174:      6(int) Constant 4294967295
             176:      6(int) Constant 4294967294
             177:             TypePointer Function 23(int)
             179:     23(int) Constant 1
             181:     23(int) Constant 2
             192:      6(int) Constant 2
             257:   63(float) Constant 1073741824
             301:             TypePointer Output 6(int)
  302(outAssert):    301(ptr) Variable Output
         4(main):           2 Function None 3
               5:             Label
    8(assertIdx):      7(ptr) Variable Function
           13(a):     12(ptr) Variable Function
           17(b):     12(ptr) Variable Function
           19(c):     12(ptr) Variable Function
           21(d):     12(ptr) Variable Function
     27(asserts):     26(ptr) Variable Function
        65(fNan):     64(ptr) Variable Function
        68(fInf):     64(ptr) Variable Function
          72(vf):     71(ptr) Variable Function
         122(b1):     31(ptr) Variable Function
         123(b2):     31(ptr) Variable Function
         173(i1):      7(ptr) Variable Function
         175(i2):      7(ptr) Variable Function
         178(u1):    177(ptr) Variable Function
         180(u2):    177(ptr) Variable Function
         255(f1):     64(ptr) Variable Function
         256(f2):     64(ptr) Variable Function
          303(i):      7(ptr) Variable Function
                              Store 8(assertIdx) 9
                              Store 13(a) 16
                              Store 17(b) 18
                              Store 19(c) 20
                              Store 21(d) 22
              28:      6(int) Load 8(assertIdx)
              29:   11(bvec2) Load 13(a)
              30:    10(bool) Any 29
              32:     31(ptr) AccessChain 27(asserts) 28
                              Store 32 30
              33:      6(int) Load 8(assertIdx)
              35:      6(int) IAdd 33 34
                              Store 8(assertIdx) 35
              36:      6(int) Load 8(assertIdx)
              37:   11(bvec2) Load 17(b)
              38:    10(bool) Any 37
              39:    10(bool) LogicalNot 38
              40:     31(ptr) AccessChain 27(asserts) 36
                              Store 40 39
              41:      6(int) Load 8(assertIdx)
              42:      6(int) IAdd 41 34
                              Store 8(assertIdx) 42
              43:      6(int) Load 8(assertIdx)
              44:   11(bvec2) Load 13(a)
              45:    10(bool) All 44
              46:    10(bool) LogicalNot 45
              47:     31(ptr) AccessChain 27(asserts) 43
                              Store 47 46
              48:      6(int) Load 8(assertIdx)
              49:      6(int) IAdd 48 34
                              Store 8(assertIdx) 49
              50:      6(int) Load 8(assertIdx)
              51:   11(bvec2) Load 17(b)
              52:    10(bool) All 51
              53:    10(bool) LogicalNot 52
              54:     31(ptr) AccessChain 27(asserts) 50
                              Store 54 53
              55:      6(int) Load 8(assertIdx)
              56:      6(int) IAdd 55 34
                              Store 8(assertIdx) 56
              57:      6(int) Load 8(assertIdx)
              58:   11(bvec2) Load 19(c)
              59:    10(bool) All 58
              60:     31(ptr) AccessChain 27(asserts) 57
                              Store 60 59
              61:      6(int) Load 8(assertIdx)
              62:      6(int) IAdd 61 34
                              Store 8(assertIdx) 62
              67:   63(float) Bitcast 66
                              Store 65(fNan) 67
                              Store 68(fInf) 69
              74:   63(float) Load 65(fNan)
              75:   63(float) Load 68(fInf)
              76:   70(fvec3) CompositeConstruct 73 74 75
                              Store 72(vf) 76
              77:      6(int) Load 8(assertIdx)
              78:   63(float) Load 65(fNan)
              79:    10(bool) IsNan 78
              80:     31(ptr) AccessChain 27(asserts) 77
                              Store 80 79
              81:      6(int) Load 8(assertIdx)
              82:      6(int) IAdd 81 34
                              Store 8(assertIdx) 82
              83:      6(int) Load 8(assertIdx)
              84:   70(fvec3) Load 72(vf)
              86:   85(bvec3) IsNan 84
              88:   85(bvec3) LogicalEqual 86 87
              89:    10(bool) All 88
              90:     31(ptr) AccessChain 27(asserts) 83
                              Store 90 89
              91:      6(int) Load 8(assertIdx)
              92:      6(int) IAdd 91 34
                              Store 8(assertIdx) 92
              93:      6(int) Load 8(assertIdx)
              94:   63(float) Load 68(fInf)
              95:    10(bool) IsInf 94
              96:     31(ptr) AccessChain 27(asserts) 93
                              Store 96 95
              97:      6(int) Load 8(assertIdx)
              98:      6(int) IAdd 97 34
                              Store 8(assertIdx) 98
              99:      6(int) Load 8(assertIdx)
             100:   70(fvec3) Load 72(vf)
             101:   85(bvec3) IsInf 100
             103:   85(bvec3) LogicalEqual 101 102
             104:    10(bool) All 103
             105:     31(ptr) AccessChain 27(asserts) 99
                              Store 105 104
             106:      6(int) Load 8(assertIdx)
             107:      6(int) IAdd 106 34
                              Store 8(assertIdx) 107
             108:      6(int) Load 8(assertIdx)
             109:   11(bvec2) Load 19(c)
             110:   11(bvec2) LogicalEqual 109 20
             111:    10(bool) All 110
             112:     31(ptr) AccessChain 27(asserts) 108
                              Store 112 111
             113:      6(int) Load 8(assertIdx)
             114:      6(int) IAdd 113 34
                              Store 8(assertIdx) 114
             115:      6(int) Load 8(assertIdx)
             116:   11(bvec2) Load 19(c)
             117:   11(bvec2) LogicalNotEqual 116 18
             118:    10(bool) Any 117
             119:     31(ptr) AccessChain 27(asserts) 115
                              Store 119 118
             120:      6(int) Load 8(assertIdx)
             121:      6(int) IAdd 120 34
                              Store 8(assertIdx) 121
                              Store 122(b1) 14
                              Store 123(b2) 15
             124:      6(int) Load 8(assertIdx)
             125:    10(bool) Load 122(b1)
             126:    10(bool) Load 123(b2)
             127:    10(bool) LogicalOr 125 126
             128:     31(ptr) AccessChain 27(asserts) 124
                              Store 128 127
             129:      6(int) Load 8(assertIdx)
             130:      6(int) IAdd 129 34
                              Store 8(assertIdx) 130
             131:      6(int) Load 8(assertIdx)
             132:    10(bool) Load 122(b1)
             133:    10(bool) Load 123(b2)
             134:    10(bool) LogicalAnd 132 133
             135:    10(bool) LogicalNot 134
             136:     31(ptr) AccessChain 27(asserts) 131
                              Store 136 135
             137:      6(int) Load 8(assertIdx)
             138:      6(int) IAdd 137 34
                              Store 8(assertIdx) 138
             139:      6(int) Load 8(assertIdx)
             140:   11(bvec2) Load 13(a)
             141:   11(bvec2) LogicalNot 140
             142:   11(bvec2) Load 21(d)
             143:   11(bvec2) LogicalEqual 141 142
             144:    10(bool) All 143
             145:     31(ptr) AccessChain 27(asserts) 139
                              Store 145 144
             146:      6(int) Load 8(assertIdx)
             147:      6(int) IAdd 146 34
                              Store 8(assertIdx) 147
             148:      6(int) Load 8(assertIdx)
             149:   11(bvec2) Load 17(b)
             150:   11(bvec2) LogicalNot 149
             151:   11(bvec2) Load 19(c)
             152:   11(bvec2) LogicalEqual 150 151
             153:    10(bool) All 152
             154:     31(ptr) AccessChain 27(asserts) 148
                              Store 154 153
             155:      6(int) Load 8(assertIdx)
             156:      6(int) IAdd 155 34
                              Store 8(assertIdx) 156
             157:      6(int) Load 8(assertIdx)
             158:    10(bool) Load 122(b1)
             161:   63(float) Select 158 159 160
             162:    10(bool) FOrdEqual 161 159
             163:     31(ptr) AccessChain 27(asserts) 157
                              Store 163 162
             164:      6(int) Load 8(assertIdx)
             165:      6(int) IAdd 164 34
                              Store 8(assertIdx) 165
             166:      6(int) Load 8(assertIdx)
             167:    10(bool) Load 123(b2)
             168:   63(float) Select 167 159 160
             169:    10(bool) FOrdEqual 168 160
             170:     31(ptr) AccessChain 27(asserts) 166
                              Store 170 169
             171:      6(int) Load 8(assertIdx)
             172:      6(int) IAdd 171 34
                              Store 8(assertIdx) 172
                              Store 173(i1) 174
                              Store 175(i2) 176
                              Store 178(u1) 179
                              Store 180(u2) 181
             182:      6(int) Load 8(assertIdx)
             183:      6(int) Load 173(i1)
             184:      6(int) ISub 183 34
             185:      6(int) Load 175(i2)
             186:    10(bool) IEqual 184 185
             187:     31(ptr) AccessChain 27(asserts) 182
                              Store 187 186
             188:      6(int) Load 8(assertIdx)
             189:      6(int) IAdd 188 34
                              Store 8(assertIdx) 189
             190:      6(int) Load 8(assertIdx)
             191:      6(int) Load 173(i1)
             193:      6(int) ISub 191 192
             194:      6(int) Load 175(i2)
             195:    10(bool) INotEqual 193 194
             196:     31(ptr) AccessChain 27(asserts) 190
                              Store 196 195
             197:      6(int) Load 8(assertIdx)
             198:      6(int) IAdd 197 34
                              Store 8(assertIdx) 198
             199:      6(int) Load 8(assertIdx)
             200:     23(int) Load 180(u2)
             201:     23(int) Load 178(u1)
             202:    10(bool) UGreaterThan 200 201
             203:     31(ptr) AccessChain 27(asserts) 199
                              Store 203 202
             204:      6(int) Load 8(assertIdx)
             205:      6(int) IAdd 204 34
                              Store 8(assertIdx) 205
             206:      6(int) Load 8(assertIdx)
             207:      6(int) Load 173(i1)
             208:      6(int) Load 175(i2)
             209:    10(bool) SGreaterThan 207 208
             210:     31(ptr) AccessChain 27(asserts) 206
                              Store 210 209
             211:      6(int) Load 8(assertIdx)
             212:      6(int) IAdd 211 34
                              Store 8(assertIdx) 212
             213:      6(int) Load 8(assertIdx)
             214:     23(int) Load 180(u2)
             215:     23(int) Load 178(u1)
             216:    10(bool) UGreaterThanEqual 214 215
             217:     31(ptr) AccessChain 27(asserts) 213
                              Store 217 216
             218:      6(int) Load 8(assertIdx)
             219:      6(int) IAdd 218 34
                              Store 8(assertIdx) 219
             220:      6(int) Load 8(assertIdx)
             221:      6(int) Load 173(i1)
             222:      6(int) Load 175(i2)
             223:    10(bool) SGreaterThanEqual 221 222
             224:     31(ptr) AccessChain 27(asserts) 220
                              Store 224 223
             225:      6(int) Load 8(assertIdx)
             226:      6(int) IAdd 225 34
                              Store 8(assertIdx) 226
             227:      6(int) Load 8(assertIdx)
             228:     23(int) Load 178(u1)
             229:     23(int) Load 180(u2)
             230:    10(bool) ULessThan 228 229
             231:     31(ptr) AccessChain 27(asserts) 227
                              Store 231 230
             232:      6(int) Load 8(assertIdx)
             233:      6(int) IAdd 232 34
                              Store 8(assertIdx) 233
             234:      6(int) Load 8(assertIdx)
             235:      6(int) Load 175(i2)
             236:      6(int) Load 173(i1)
             237:    10(bool) SLessThan 235 236
             238:     31(ptr) AccessChain 27(asserts) 234
                              Store 238 237
             239:      6(int) Load 8(assertIdx)
             240:      6(int) IAdd 239 34
                              Store 8(assertIdx) 240
             241:      6(int) Load 8(assertIdx)
             242:     23(int) Load 178(u1)
             243:     23(int) Load 180(u2)
             244:    10(bool) ULessThanEqual 242 243
             245:     31(ptr) AccessChain 27(asserts) 241
                              Store 245 244
             246:      6(int) Load 8(assertIdx)
             247:      6(int) IAdd 246 34
                              Store 8(assertIdx) 247
             248:      6(int) Load 8(assertIdx)
             249:      6(int) Load 175(i2)
             250:      6(int) Load 173(i1)
             251:    10(bool) SLessThanEqual 249 250
             252:     31(ptr) AccessChain 27(asserts) 248
                              Store 252 251
             253:      6(int) Load 8(assertIdx)
             254:      6(int) IAdd 253 34
                              Store 8(assertIdx) 254
                              Store 255(f1) 73
                              Store 256(f2) 257
             258:      6(int) Load 8(assertIdx)
             259:   63(float) Load 255(f1)
             260:   63(float) FAdd 259 73
             261:   63(float) Load 256(f2)
             262:    10(bool) FOrdEqual 260 261
             263:     31(ptr) AccessChain 27(asserts) 258
                              Store 263 262
             264:      6(int) Load 8(assertIdx)
             265:      6(int) IAdd 264 34
                              Store 8(assertIdx) 265
             266:      6(int) Load 8(assertIdx)
             267:   63(float) Load 255(f1)
             268:   63(float) Load 256(f2)
             269:    10(bool) FOrdLessThan 267 268
             270:     31(ptr) AccessChain 27(asserts) 266
                              Store 270 269
             271:      6(int) Load 8(assertIdx)
             272:      6(int) IAdd 271 34
                              Store 8(assertIdx) 272
             273:      6(int) Load 8(assertIdx)
             274:   63(float) Load 256(f2)
             275:   63(float) Load 255(f1)
             276:    10(bool) FOrdGreaterThan 274 275
             277:     31(ptr) AccessChain 27(asserts) 273
                              Store 277 276
             278:      6(int) Load 8(assertIdx)
             279:      6(int) IAdd 278 34
                              Store 8(assertIdx) 279
             280:      6(int) Load 8(assertIdx)
             281:   63(float) Load 255(f1)
             282:   63(float) Load 256(f2)
             283:    10(bool) FOrdLessThanEqual 281 282
             284:     31(ptr) AccessChain 27(asserts) 280
                              Store 284 283
             285:      6(int) Load 8(assertIdx)
             286:      6(int) IAdd 285 34
                              Store 8(assertIdx) 286
             287:      6(int) Load 8(assertIdx)
             288:   63(float) Load 256(f2)
             289:   63(float) Load 255(f1)
             290:    10(bool) FOrdGreaterThanEqual 288 289
             291:     31(ptr) AccessChain 27(asserts) 287
                              Store 291 290
             292:      6(int) Load 8(assertIdx)
             293:      6(int) IAdd 292 34
                              Store 8(assertIdx) 293
             294:      6(int) Load 8(assertIdx)
             295:   63(float) Load 255(f1)
             296:   63(float) Load 256(f2)
             297:    10(bool) FUnordNotEqual 295 296
             298:     31(ptr) AccessChain 27(asserts) 294
                              Store 298 297
             299:      6(int) Load 8(assertIdx)
             300:      6(int) IAdd 299 34
                              Store 8(assertIdx) 300
                              Store 302(outAssert) 174
                              Store 303(i) 9
                              Branch 304
             304:             Label
                              LoopMerge 306 307 None
                              Branch 308
             308:             Label
             309:      6(int) Load 303(i)
             310:      6(int) Load 8(assertIdx)
             311:    10(bool) SLessThan 309 310
                              BranchConditional 311 305 306
             305:               Label
             312:      6(int)   Load 303(i)
             313:     31(ptr)   AccessChain 27(asserts) 312
             314:    10(bool)   Load 313
             315:    10(bool)   LogicalNot 314
                                SelectionMerge 317 None
                                BranchConditional 315 316 317
             316:                 Label
             318:      6(int)     Load 303(i)
                                  Store 302(outAssert) 318
                                  Branch 306
             317:               Label
                                Branch 307
             307:               Label
             320:      6(int)   Load 303(i)
             321:      6(int)   IAdd 320 34
                                Store 303(i) 321
                                Branch 304
             306:             Label
                              Return
                              FunctionEnd
