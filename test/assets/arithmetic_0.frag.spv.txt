arithmetic_0.frag
// Module Version 10000
// Generated by (magic number): 8000a
// Id's are bound by 277

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 4  "main" 257
                              ExecutionMode 4 OriginUpperLeft
                              Source GLSL 450
                              SourceExtension  "GL_GOOGLE_cpp_style_line_directive"
                              SourceExtension  "GL_GOOGLE_include_directive"
                              Name 4  "main"
                              Name 8  "assertIdx"
                              Name 10  "a0"
                              Name 12  "outOpSNegate"
                              Name 20  "asserts"
                              Name 32  "a1"
                              Name 34  "outOpFNegate"
                              Name 44  "a2"
                              Name 45  "outOpIAdd"
                              Name 57  "a3"
                              Name 60  "outOpFAdd"
                              Name 81  "a4"
                              Name 83  "outOpISub"
                              Name 97  "a5"
                              Name 98  "outOpFSub"
                              Name 112  "a6"
                              Name 116  "outOpIMul"
                              Name 129  "a7"
                              Name 132  "outOpFMul"
                              Name 146  "a8"
                              Name 151  "outOpUDiv"
                              Name 168  "a9"
                              Name 173  "outOpSDiv"
                              Name 186  "a10"
                              Name 191  "outOpFDiv"
                              Name 207  "a11"
                              Name 211  "outOpUMod"
                              Name 223  "a12"
                              Name 227  "outOpSMod"
                              Name 238  "a13"
                              Name 243  "outOpFMod"
                              Name 257  "outAssert"
                              Name 258  "i"
                              Decorate 257(outAssert) Location 0
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeInt 32 1
               7:             TypePointer Function 6(int)
               9:      6(int) Constant 0
              11:      6(int) Constant 5
              15:             TypeBool
              16:             TypeInt 32 0
              17:     16(int) Constant 32
              18:             TypeArray 15(bool) 17
              19:             TypePointer Function 18
              23:      6(int) Constant 4294967291
              25:             TypePointer Function 15(bool)
              28:      6(int) Constant 1
              30:             TypeFloat 32
              31:             TypePointer Function 30(float)
              33:   30(float) Constant 1084227584
              39:   30(float) Constant 3231711232
              50:      6(int) Constant 6
              55:             TypeVector 30(float) 3
              56:             TypePointer Function 55(fvec3)
              58:   30(float) Constant 1065353216
              59:   55(fvec3) ConstantComposite 58 58 58
              62:   30(float) Constant 1036831949
              63:   30(float) Constant 1045220557
              64:   30(float) Constant 1050253722
              65:   55(fvec3) ConstantComposite 62 63 64
              69:   30(float) Constant 1066192077
              70:   30(float) Constant 1067030938
              71:   30(float) Constant 1067869798
              72:   55(fvec3) ConstantComposite 69 70 71
              73:             TypeVector 15(bool) 3
              79:             TypeVector 6(int) 3
              80:             TypePointer Function 79(ivec3)
              82:   79(ivec3) ConstantComposite 11 11 11
              85:      6(int) Constant 4
              86:   79(ivec3) ConstantComposite 85 11 50
              90:      6(int) Constant 4294967295
              91:   79(ivec3) ConstantComposite 28 9 90
             103:   30(float) Constant 1063675494
             104:   30(float) Constant 1061997773
             105:   30(float) Constant 1060320051
             106:   55(fvec3) ConstantComposite 103 104 105
             113:      6(int) Constant 4294967294
             114:      6(int) Constant 3
             115:   79(ivec3) ConstantComposite 28 113 114
             121:      6(int) Constant 4294967286
             122:      6(int) Constant 18
             123:   79(ivec3) ConstantComposite 85 121 122
             130:   30(float) Constant 3221225472
             131:   55(fvec3) ConstantComposite 58 130 58
             137:   30(float) Constant 3201092813
             138:   55(fvec3) ConstantComposite 62 137 64
             144:             TypeVector 16(int) 3
             145:             TypePointer Function 144(ivec3)
             147:     16(int) Constant 10
             148:     16(int) Constant 20
             149:     16(int) Constant 3
             150:  144(ivec3) ConstantComposite 147 148 149
             153:     16(int) Constant 4
             154:     16(int) Constant 5
             155:     16(int) Constant 6
             156:  144(ivec3) ConstantComposite 153 154 155
             160:     16(int) Constant 2
             161:     16(int) Constant 0
             162:  144(ivec3) ConstantComposite 160 153 161
             169:      6(int) Constant 10
             170:      6(int) Constant 4294967276
             171:      6(int) Constant 30
             172:   79(ivec3) ConstantComposite 169 170 171
             178:      6(int) Constant 2
             179:      6(int) Constant 4294967292
             180:   79(ivec3) ConstantComposite 178 179 11
             187:   30(float) Constant 1092616192
             188:   30(float) Constant 3248488448
             189:   30(float) Constant 1106247680
             190:   55(fvec3) ConstantComposite 187 188 189
             193:   30(float) Constant 1082130432
             194:   30(float) Constant 1086324736
             195:   55(fvec3) ConstantComposite 193 33 194
             199:   30(float) Constant 1075838976
             200:   30(float) Constant 3229614080
             201:   55(fvec3) ConstantComposite 199 200 33
             208:     16(int) Constant 21
             209:     16(int) Constant 31
             210:  144(ivec3) ConstantComposite 147 208 209
             216:     16(int) Constant 1
             217:  144(ivec3) ConstantComposite 160 216 216
             224:      6(int) Constant 4294967275
             225:      6(int) Constant 31
             226:   79(ivec3) ConstantComposite 169 224 225
             232:   79(ivec3) ConstantComposite 178 85 28
             239:   30(float) Constant 1092721050
             240:   30(float) Constant 3249222451
             241:   30(float) Constant 1106929254
             242:   55(fvec3) ConstantComposite 239 240 241
             248:   30(float) Constant 1074161254
             249:   30(float) Constant 1080452710
             250:   55(fvec3) ConstantComposite 248 249 71
             256:             TypePointer Output 6(int)
  257(outAssert):    256(ptr) Variable Output
         4(main):           2 Function None 3
               5:             Label
    8(assertIdx):      7(ptr) Variable Function
          10(a0):      7(ptr) Variable Function
12(outOpSNegate):      7(ptr) Variable Function
     20(asserts):     19(ptr) Variable Function
          32(a1):     31(ptr) Variable Function
34(outOpFNegate):     31(ptr) Variable Function
          44(a2):      7(ptr) Variable Function
   45(outOpIAdd):      7(ptr) Variable Function
          57(a3):     56(ptr) Variable Function
   60(outOpFAdd):     56(ptr) Variable Function
          81(a4):     80(ptr) Variable Function
   83(outOpISub):     80(ptr) Variable Function
          97(a5):     56(ptr) Variable Function
   98(outOpFSub):     56(ptr) Variable Function
         112(a6):     80(ptr) Variable Function
  116(outOpIMul):     80(ptr) Variable Function
         129(a7):     56(ptr) Variable Function
  132(outOpFMul):     56(ptr) Variable Function
         146(a8):    145(ptr) Variable Function
  151(outOpUDiv):    145(ptr) Variable Function
         168(a9):     80(ptr) Variable Function
  173(outOpSDiv):     80(ptr) Variable Function
        186(a10):     56(ptr) Variable Function
  191(outOpFDiv):     56(ptr) Variable Function
        207(a11):    145(ptr) Variable Function
  211(outOpUMod):    145(ptr) Variable Function
        223(a12):     80(ptr) Variable Function
  227(outOpSMod):     80(ptr) Variable Function
        238(a13):     56(ptr) Variable Function
  243(outOpFMod):     56(ptr) Variable Function
          258(i):      7(ptr) Variable Function
                              Store 8(assertIdx) 9
                              Store 10(a0) 11
              13:      6(int) Load 10(a0)
              14:      6(int) SNegate 13
                              Store 12(outOpSNegate) 14
              21:      6(int) Load 8(assertIdx)
              22:      6(int) Load 12(outOpSNegate)
              24:    15(bool) IEqual 22 23
              26:     25(ptr) AccessChain 20(asserts) 21
                              Store 26 24
              27:      6(int) Load 8(assertIdx)
              29:      6(int) IAdd 27 28
                              Store 8(assertIdx) 29
                              Store 32(a1) 33
              35:   30(float) Load 32(a1)
              36:   30(float) FNegate 35
                              Store 34(outOpFNegate) 36
              37:      6(int) Load 8(assertIdx)
              38:   30(float) Load 34(outOpFNegate)
              40:    15(bool) FOrdEqual 38 39
              41:     25(ptr) AccessChain 20(asserts) 37
                              Store 41 40
              42:      6(int) Load 8(assertIdx)
              43:      6(int) IAdd 42 28
                              Store 8(assertIdx) 43
                              Store 44(a2) 11
              46:      6(int) Load 44(a2)
              47:      6(int) IAdd 46 28
                              Store 45(outOpIAdd) 47
              48:      6(int) Load 8(assertIdx)
              49:      6(int) Load 45(outOpIAdd)
              51:    15(bool) IEqual 49 50
              52:     25(ptr) AccessChain 20(asserts) 48
                              Store 52 51
              53:      6(int) Load 8(assertIdx)
              54:      6(int) IAdd 53 28
                              Store 8(assertIdx) 54
                              Store 57(a3) 59
              61:   55(fvec3) Load 57(a3)
              66:   55(fvec3) FAdd 61 65
                              Store 60(outOpFAdd) 66
              67:      6(int) Load 8(assertIdx)
              68:   55(fvec3) Load 60(outOpFAdd)
              74:   73(bvec3) FOrdEqual 68 72
              75:    15(bool) All 74
              76:     25(ptr) AccessChain 20(asserts) 67
                              Store 76 75
              77:      6(int) Load 8(assertIdx)
              78:      6(int) IAdd 77 28
                              Store 8(assertIdx) 78
                              Store 81(a4) 82
              84:   79(ivec3) Load 81(a4)
              87:   79(ivec3) ISub 84 86
                              Store 83(outOpISub) 87
              88:      6(int) Load 8(assertIdx)
              89:   79(ivec3) Load 83(outOpISub)
              92:   73(bvec3) IEqual 89 91
              93:    15(bool) All 92
              94:     25(ptr) AccessChain 20(asserts) 88
                              Store 94 93
              95:      6(int) Load 8(assertIdx)
              96:      6(int) IAdd 95 28
                              Store 8(assertIdx) 96
                              Store 97(a5) 59
              99:   55(fvec3) Load 97(a5)
             100:   55(fvec3) FSub 99 65
                              Store 98(outOpFSub) 100
             101:      6(int) Load 8(assertIdx)
             102:   55(fvec3) Load 98(outOpFSub)
             107:   73(bvec3) FOrdEqual 102 106
             108:    15(bool) All 107
             109:     25(ptr) AccessChain 20(asserts) 101
                              Store 109 108
             110:      6(int) Load 8(assertIdx)
             111:      6(int) IAdd 110 28
                              Store 8(assertIdx) 111
                              Store 112(a6) 115
             117:   79(ivec3) Load 112(a6)
             118:   79(ivec3) IMul 117 86
                              Store 116(outOpIMul) 118
             119:      6(int) Load 8(assertIdx)
             120:   79(ivec3) Load 116(outOpIMul)
             124:   73(bvec3) IEqual 120 123
             125:    15(bool) All 124
             126:     25(ptr) AccessChain 20(asserts) 119
                              Store 126 125
             127:      6(int) Load 8(assertIdx)
             128:      6(int) IAdd 127 28
                              Store 8(assertIdx) 128
                              Store 129(a7) 131
             133:   55(fvec3) Load 129(a7)
             134:   55(fvec3) FMul 133 65
                              Store 132(outOpFMul) 134
             135:      6(int) Load 8(assertIdx)
             136:   55(fvec3) Load 132(outOpFMul)
             139:   73(bvec3) FOrdEqual 136 138
             140:    15(bool) All 139
             141:     25(ptr) AccessChain 20(asserts) 135
                              Store 141 140
             142:      6(int) Load 8(assertIdx)
             143:      6(int) IAdd 142 28
                              Store 8(assertIdx) 143
                              Store 146(a8) 150
             152:  144(ivec3) Load 146(a8)
             157:  144(ivec3) UDiv 152 156
                              Store 151(outOpUDiv) 157
             158:      6(int) Load 8(assertIdx)
             159:  144(ivec3) Load 151(outOpUDiv)
             163:   73(bvec3) IEqual 159 162
             164:    15(bool) All 163
             165:     25(ptr) AccessChain 20(asserts) 158
                              Store 165 164
             166:      6(int) Load 8(assertIdx)
             167:      6(int) IAdd 166 28
                              Store 8(assertIdx) 167
                              Store 168(a9) 172
             174:   79(ivec3) Load 168(a9)
             175:   79(ivec3) SDiv 174 86
                              Store 173(outOpSDiv) 175
             176:      6(int) Load 8(assertIdx)
             177:   79(ivec3) Load 173(outOpSDiv)
             181:   73(bvec3) IEqual 177 180
             182:    15(bool) All 181
             183:     25(ptr) AccessChain 20(asserts) 176
                              Store 183 182
             184:      6(int) Load 8(assertIdx)
             185:      6(int) IAdd 184 28
                              Store 8(assertIdx) 185
                              Store 186(a10) 190
             192:   55(fvec3) Load 186(a10)
             196:   55(fvec3) FDiv 192 195
                              Store 191(outOpFDiv) 196
             197:      6(int) Load 8(assertIdx)
             198:   55(fvec3) Load 191(outOpFDiv)
             202:   73(bvec3) FOrdEqual 198 201
             203:    15(bool) All 202
             204:     25(ptr) AccessChain 20(asserts) 197
                              Store 204 203
             205:      6(int) Load 8(assertIdx)
             206:      6(int) IAdd 205 28
                              Store 8(assertIdx) 206
                              Store 207(a11) 210
             212:  144(ivec3) Load 207(a11)
             213:  144(ivec3) UMod 212 156
                              Store 211(outOpUMod) 213
             214:      6(int) Load 8(assertIdx)
             215:  144(ivec3) Load 211(outOpUMod)
             218:   73(bvec3) IEqual 215 217
             219:    15(bool) All 218
             220:     25(ptr) AccessChain 20(asserts) 214
                              Store 220 219
             221:      6(int) Load 8(assertIdx)
             222:      6(int) IAdd 221 28
                              Store 8(assertIdx) 222
                              Store 223(a12) 226
             228:   79(ivec3) Load 223(a12)
             229:   79(ivec3) SMod 228 86
                              Store 227(outOpSMod) 229
             230:      6(int) Load 8(assertIdx)
             231:   79(ivec3) Load 227(outOpSMod)
             233:   73(bvec3) IEqual 231 232
             234:    15(bool) All 233
             235:     25(ptr) AccessChain 20(asserts) 230
                              Store 235 234
             236:      6(int) Load 8(assertIdx)
             237:      6(int) IAdd 236 28
                              Store 8(assertIdx) 237
                              Store 238(a13) 242
             244:   55(fvec3) Load 238(a13)
             245:   55(fvec3) FMod 244 195
                              Store 243(outOpFMod) 245
             246:      6(int) Load 8(assertIdx)
             247:   55(fvec3) Load 243(outOpFMod)
             251:   73(bvec3) FOrdEqual 247 250
             252:    15(bool) All 251
             253:     25(ptr) AccessChain 20(asserts) 246
                              Store 253 252
             254:      6(int) Load 8(assertIdx)
             255:      6(int) IAdd 254 28
                              Store 8(assertIdx) 255
                              Store 257(outAssert) 90
                              Store 258(i) 9
                              Branch 259
             259:             Label
                              LoopMerge 261 262 None
                              Branch 263
             263:             Label
             264:      6(int) Load 258(i)
             265:      6(int) Load 8(assertIdx)
             266:    15(bool) SLessThan 264 265
                              BranchConditional 266 260 261
             260:               Label
             267:      6(int)   Load 258(i)
             268:     25(ptr)   AccessChain 20(asserts) 267
             269:    15(bool)   Load 268
             270:    15(bool)   LogicalNot 269
                                SelectionMerge 272 None
                                BranchConditional 270 271 272
             271:                 Label
             273:      6(int)     Load 258(i)
                                  Store 257(outAssert) 273
                                  Branch 261
             272:               Label
                                Branch 262
             262:               Label
             275:      6(int)   Load 258(i)
             276:      6(int)   IAdd 275 28
                                Store 258(i) 276
                                Branch 259
             261:             Label
                              Return
                              FunctionEnd
